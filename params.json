{
  "name": "Madelineproto",
  "tagline": "PHP implementation of mtproto. WIP.",
  "body": "# MadelineProto\r\n[![StyleCI](https://styleci.io/repos/61838413/shield)](https://styleci.io/repos/61838413)\r\n[![Build Status](https://travis-ci.org/danog/MadelineProto.svg?branch=master)](https://travis-ci.org/danog/MadelineProto)  \r\n\r\nLicensed under AGPLv3.\r\n\r\nPHP implementation of MTProto, based on [telepy](https://github.com/griganton/telepy_old).\r\n\r\nThis project can run on PHP 7, PHP 5.6 and HHVM.  \r\n\r\nThis is a WIP.  \r\n\r\nStructure of this project:\r\n```\r\nsrc/danog/MadelineProto/\r\n    MTProtoTools/\r\n        AckHandler - Handles acknowledgement of incoming and outgoing mtproto messages\r\n        AuthKeyHandler - Handles generation of the temporary and permanent authorization keys\r\n        CallHandler - Handles synchronous calls to mtproto methods or objects, also basic response management (waits until the socket receives a response)\r\n        Crypt - Handles ige and aes encryption\r\n        Exception - Handles exceptions in the MTProtoTools namespace\r\n        MessageHandler - Handles sending and receiving of mtproto messages (packs TL serialized data with message id, auth key id and encrypts it with Crypt if needed, adds them to the arrays of incoming and outgoing messages)\r\n        MsgIdHandler - Handles message ids (checks if they are valid, adds them to the arrays of incoming and outgoing messages)\r\n        ResponseHandler - Handles the content of responses received, service messages, rpc results, errors, and stores them into the response section of the outgoing messages array)\r\n        SaltHandler - Handles server salts\r\n        SeqNoHandler - Handles sequence numbers (checks validity)\r\n    TL/\r\n        Exception - Handles exceptions in the TL namespace\r\n        TL - Handles TL serialization and deserialization\r\n        TLConstructor - Represents a TL Constructor\r\n        TLMethod - Represents a TL method\r\n    API - Wrapper class that istantiates the MTProto class, sets the error handler, and provides a wrapper for calling mtproto methods directly as class submethods\r\n    Connection - Handles tcp/udp/http connections and wrapping payloads generated by MTProtoTools/MessageHandler into the right message according to the protocol\r\n    DataCenter - Handles mtproto datacenters\r\n    DebugTools - Various debugging tools\r\n    Exception - Handles exceptions in the main namespace\r\n    MTProto - Extends MTProtoTools, handles initial connection, generation of authorization keys, istantiation of classes\r\n    MTProtoTools - Extends all of the classes in MTProtoTools/\r\n    prime.py - prime module (python) for p and q generation\r\n    PrimeModule.php - prime module (php) for p and q generation by wrapping the python module, using wolfram alpha or a built in PHP engine\r\n    RSA - Handles RSA public keys and signatures\r\n    Tools - Various tools (positive modulus, string2bin, python-like range)\r\n```\r\n\r\n\r\nThis project adheres to the [Hacktoberfest](https://hacktoberfest.digitalocean.com/) event by DigitalOcean.  \r\nBrowse the issues of this project and help close at least four of them with a pull request to get a free t-shirt!  \r\nCheck out the [Contribution guide first though](https://github.com/danog/MadelineProto/blob/master/CONTRIBUTING.md).\r\n\r\nThe name of this project is inspired by [this person](https://s-media-cache-ak0.pinimg.com/736x/f0/a1/70/f0a170718baeb0e3817c612d96f5d1cf.jpg).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}